apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-18T16:14:36Z"
    labels:
      run: curl
    name: curl
    namespace: default
    resourceVersion: "3399"
    uid: 4bfc700d-2b93-46cb-b170-8f6738cb1885
  spec:
    containers:
    - args:
      - curl
      - http://my-nextjs-app:3000
      image: curlimages/curl
      imagePullPolicy: Always
      name: curl
      resources: {}
      stdin: true
      stdinOnce: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      tty: true
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jm25m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: kind-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jm25m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T16:14:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T16:14:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T16:31:07Z"
      message: 'containers with unready status: [curl]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T16:31:07Z"
      message: 'containers with unready status: [curl]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T16:14:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://866d11e90550e993b2bb220dd68b9b0d766a8ccf96fc93154ebf3826b8365a09
      image: docker.io/curlimages/curl:latest
      imageID: docker.io/curlimages/curl@sha256:94e9e444bcba979c2ea12e27ae39bee4cd10bc7041a472c4727a558e213744e6
      lastState:
        terminated:
          containerID: containerd://866d11e90550e993b2bb220dd68b9b0d766a8ccf96fc93154ebf3826b8365a09
          exitCode: 0
          finishedAt: "2025-03-18T16:31:06Z"
          reason: Completed
          startedAt: "2025-03-18T16:31:06Z"
      name: curl
      ready: false
      restartCount: 8
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=curl pod=curl_default(4bfc700d-2b93-46cb-b170-8f6738cb1885)
          reason: CrashLoopBackOff
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jm25m
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2025-03-18T16:14:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-18T15:58:09Z"
    generateName: my-nextjs-app-5ff5747bbb-
    labels:
      app: my-nextjs-app
      pod-template-hash: 5ff5747bbb
    name: my-nextjs-app-5ff5747bbb-272vm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-nextjs-app-5ff5747bbb
      uid: 864083a3-f757-49df-9dc6-1cfcca58725e
    resourceVersion: "798"
    uid: a7a35c82-23e7-4cd2-920d-0ad8da1e3d1f
  spec:
    containers:
    - image: fimars/my-nextjs-app-img:latest
      imagePullPolicy: IfNotPresent
      name: my-nextjs-app
      ports:
      - containerPort: 3000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpvdp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: kind-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-xpvdp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T15:59:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T15:58:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T15:59:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T15:59:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-18T15:58:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://372cc277a652962783fb0ad0a3fe21e098567362fae0cc2e204c71f9918eb024
      image: docker.io/fimars/my-nextjs-app-img:latest
      imageID: docker.io/fimars/my-nextjs-app-img@sha256:f62da9e65125c10c935409c510983488820fb45e1646e77abec5c2c8a6ec8c53
      lastState: {}
      name: my-nextjs-app
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-18T15:59:11Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpvdp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: BestEffort
    startTime: "2025-03-18T15:58:09Z"
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-18T15:54:34Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "195"
    uid: eee1597e-a578-45a6-9b82-2b7742d543c7
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"my-nextjs-app","namespace":"default"},"spec":{"ports":[{"nodePort":30000,"port":3000,"targetPort":3000}],"selector":{"app":"my-nextjs-app"},"type":"NodePort"}}
    creationTimestamp: "2025-03-18T15:56:54Z"
    name: my-nextjs-app
    namespace: default
    resourceVersion: "598"
    uid: 5c9e1393-b0d7-4e89-96dd-9f42c5436123
  spec:
    clusterIP: 10.96.151.218
    clusterIPs:
    - 10.96.151.218
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30000
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: my-nextjs-app
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"my-nextjs-app","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"my-nextjs-app"}},"template":{"metadata":{"labels":{"app":"my-nextjs-app"}},"spec":{"containers":[{"image":"fimars/my-nextjs-app-img:latest","imagePullPolicy":"IfNotPresent","name":"my-nextjs-app","ports":[{"containerPort":3000}]}]}}}}
    creationTimestamp: "2025-03-18T15:58:09Z"
    generation: 1
    name: my-nextjs-app
    namespace: default
    resourceVersion: "802"
    uid: 158ad091-21df-4685-9548-de8455aae062
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: my-nextjs-app
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: my-nextjs-app
      spec:
        containers:
        - image: fimars/my-nextjs-app-img:latest
          imagePullPolicy: IfNotPresent
          name: my-nextjs-app
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-18T15:59:11Z"
      lastUpdateTime: "2025-03-18T15:59:11Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-18T15:58:09Z"
      lastUpdateTime: "2025-03-18T15:59:11Z"
      message: ReplicaSet "my-nextjs-app-5ff5747bbb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-18T15:58:09Z"
    generation: 1
    labels:
      app: my-nextjs-app
      pod-template-hash: 5ff5747bbb
    name: my-nextjs-app-5ff5747bbb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nextjs-app
      uid: 158ad091-21df-4685-9548-de8455aae062
    resourceVersion: "800"
    uid: 864083a3-f757-49df-9dc6-1cfcca58725e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: my-nextjs-app
        pod-template-hash: 5ff5747bbb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: my-nextjs-app
          pod-template-hash: 5ff5747bbb
      spec:
        containers:
        - image: fimars/my-nextjs-app-img:latest
          imagePullPolicy: IfNotPresent
          name: my-nextjs-app
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
